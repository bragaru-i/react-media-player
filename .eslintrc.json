{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "extends": [
    "standard",
    "plugin:promise/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended"
  ],

  "env": {
    "node": false
  },
  "parserOptions": {
    "ecmaVersion": 2020,
    "ecmaFeatures": {
      "legacyDecorators": true,
      "jsx": false
    }
  },
  "plugins": ["import", "@typescript-eslint", "disable", "promise"],
  "processor": "disable/disable",
  "rules": {
    "space-before-function-paren": 0,
    "import/export": 0,
    "no-void": [
      "error",
      {
        "allowAsStatement": true
      }
    ],
    "require-await": "off",
    "promise/always-return": "warn",
    "promise/catch-or-return": [
      "warn",
      {
        "allowFinally": true
      }
    ],
    "max-lines": [
      "error",
      {
        "max": 300
      }
    ]
  },
  "overrides": [
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "extends": ["standard-react", "plugin:prettier/recommended"],
      "env": {
        "node": false
      },
      "parserOptions": {
        "project": "tsconfig.json"
      },
      "plugins": ["react-hooks"],
      "rules": {
        "react/react-in-jsx-scope": "off",
        "react/jsx-uses-react": "off",
        "react/prop-types": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/no-empty-interface": "off",
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "^_",
            "varsIgnorePattern": "^_",
            "ignoreRestSiblings": true
          }
        ],
        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": ["error"],
        "no-useless-constructor": "off",
        "@typescript-eslint/no-useless-constructor": ["error"],
        "@typescript-eslint/restrict-template-expressions": "off",
        "@typescript-eslint/require-await": "off",
        "camelcase": "off",
        "curly": ["error"],
        "no-cond-assign": ["error"],
        "no-constant-binary-expression": ["error"],
        "no-fallthrough": ["error"],
        "no-invalid-regexp": ["error"],
        "no-nested-ternary": ["error"],
        "no-self-assign": ["error"],
        "no-template-curly-in-string": ["error"],
        "require-atomic-updates": ["error"],
        "import/order": [
          "error",
          {
            "newlines-between": "always",
            "alphabetize": {
              "order": "asc",
              "caseInsensitive": true
            }
          }
        ],
        "use-isnan": ["error"],
        "valid-typeof": ["error"],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "function",
            "format": ["PascalCase", "camelCase"]
          }
        ],
        "@typescript-eslint/no-floating-promises": [
          "error",
          {
            "ignoreVoid": true
          }
        ],
        "@typescript-eslint/await-thenable": ["error"]
      }
    },
    {
      "files": ["**/*.d.ts"],
      "rules": {
        "camelcase": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/naming-convention": "off"
      }
    },
    {
      "files": ["**/*.tsx"],
      "parserOptions": {
        "ecmaFeatures": {
          "jsx": true
        }
      },
      "env": {
        "node": false
      }
    },
    {
      "files": "lib/**/*.spec.ts",
      "extends": ["plugin:jest/recommended"]
    },
    {
      "files": [".storybook/**/*.ts", ".storybook/**/*.tsx"],
      "parserOptions": {
        "project": "tsconfig.test.json"
      }
    }
  ],
  "ignorePatterns": ["vite.config.ts", "node_modules", "dist"]
}
